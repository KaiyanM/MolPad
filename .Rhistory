library("MolPad")
data("fungal_garden")
class(cheesedata)
a <- pre_process(fungal_dlist,typenameList = c("Peptide","Metabolite","Lipid"))
library(MolPad)
data("cheese")
cheesedata <- cheese %>%
mutate(annotations["kingdom"]) %>%
rename(type=kingdom) %>%
pre_process()
#-----------------------update package----------------------
library(devtools)
setwd("/Users/hazelma/Documents/GitHub")
#create("MolPad")
document("MolPad") #important: generate man
cheesedata <- cheese %>%
mutate(annotations["kingdom"]) %>%
rename(type=kingdom) %>%
pre_process()
data("cheese")
cheesedata <- cheese %>%
mutate(annotations["kingdom"]) %>%
rename(type=kingdom) %>%
pre_process()
data("cheese")
cheesedata <- cheese %>%
mutate(annotations["kingdom"]) %>%
rename(type=kingdom) %>%
pre_process()
cheesedata <- cheese %>%
mutate(annotations["kingdom"]) %>%
rename(type=kingdom) %>%
pre_process()
chee <- merge(c12,t12[,c("ID","kingdom")],by="ID")
cluschee <- gClusters(cheesedata,ncluster = 10,elbow.max=15)
networkchee <- gNetwork(cluschee,ntop = 3)
pathchee <- annotations %>%
rename("taxonomic.scope" = "class") %>%
rename("Pathway" = "phylum")
gDashboard(cheesedata,cluschee,pathchee,networkchee,dashboardtitle = "Test","KEGG_ID")
gDashboard(cheesedata,cluschee,pathchee,networkchee,dashboardtitle = "Test","KEGG_ID")
knitr::opts_chunk$set(echo = TRUE)
test1 <- function(annotation, data, cluster_output) {
data |>
mutate(cluster = paste0("Group_", cluster_output[[1]]$cluster)) |>
select(c("ID", "cluster")) |>
merge(annotation, by = "ID", all.x = TRUE)
}
test1 <- function(processed_annotation, processed_data, cluster_output) {
processed_data |>
mutate(cluster = paste0("Group_", cluster_output[[1]]$cluster)) |>
select(c("ID", "cluster")) |>
merge(processed_annotation, by = "ID", all.x = TRUE)
}
test1(pathchee,cheesedata,cluschee)
gMainData <- function(processed_data, clusters_output, processed_annotation) {
clustersres <- clusters_output[[1]]
maindata <- processed_data |>
mutate(cluster = paste0("Group_", clustersres$cluster)) |>
pivot_longer(
c(-ID, -cluster, -type),
names_to = "day",
values_to = "value"
) |>
mutate(day = factor(day, levels = colnames(processed_data)[c(-1, -ncol(processed_data))])) |>
left_join(select(processed_annotation, ID, taxonomic.scope), by = "ID")
maindata$taxonomic.scope[is.na(maindata$taxonomic.scope)] <- "No Label"
maindata
}
rm(`gMainData()`)
rm('gMainData()')
rm(gMainData())
rm(gMainData)
test2_dfgroup_long <- function(processed_data, clusters_output, processed_annotation) {
clustersres <- clusters_output[[1]]
maindata <- processed_data |>
mutate(cluster = paste0("Group_", clustersres$cluster)) |>
pivot_longer(
c(-ID, -cluster, -type),
names_to = "day",
values_to = "value"
) |>
mutate(day = factor(day, levels = colnames(processed_data)[c(-1, -ncol(processed_data))])) |>
left_join(select(processed_annotation, ID, taxonomic.scope), by = "ID")
maindata$taxonomic.scope[is.na(maindata$taxonomic.scope)] <- "No Label"
maindata
}
test2_dfgroup_long(cheesedata,cluschee,pathchee)
test2_dfgroup_long(cheesedata,cluschee,pathchee)
test1(pathchee,cheesedata,cluschee)
test1(pathchee,cheesedata,cluschee)
test <- test1(pathchee,cheesedata,cluschee)
test2_dfgroup_long(cheesedata,cluschee,pathchee)
View(cheesedata)
View(annotations)
summmary(annotations)
summary(annotations)
summary(as.factor(annotations$kingdom))
test <- cheese %>%
left_join(annotations["kingdom"]) %>%
rename(type=kingdom) %>%
pre_process()
View(pathchee)
View(annotations)
#' @export
gAnnotation <- function(data,first_order,second_order,identifier) {
data %>%
rename("Pathway" = first_order,
"taxonomic.scope" = second_order,
"web_id" = identifier)
}
str(clas)
toString(class)
toString(ddj)
string(sssa)
as.character(class)
as.character(djsjd)
character(shhs)
testfun <- function(x=""){
return(x)
}
testfun(big)
testfun <- function(x){
return(str(x))
}
testfun(big)
testfun <- function(x){
return(as.character(x))
}
testfun(big)
printname <- function(x) deparse(substitute(x))
testfun <- function(x){
return(printname(x))
}
testfun(big)
printname(big)
testfun <- function(x){
printname(x)
}
testfun(big)
substitute(big)
class(substitute(big))
big
as.character(substitute(big))
as.character(substitute(sumd))
testfun <- function(x,y,z){
as.character(substitute(x))
}
testfun(lu,lkd,lo)
View(annotations)
#' @export
gAnnotation <- function(data,first_order,second_order,identifier) {
data %>%
rename("Pathway" = as.character(substitute(first_order)),
"taxonomic.scope" = as.character(substitute(second_order)),
"web_id" = as.character(substitute(identifier)))
}
test <- gAnnotation(annotations,phylum,class,KEGG_ID)
#' @export
gAnnotation <- function(data,first_order,second_order,identifier) {
data %>%
rename("Pathway" = as.character(first_order),
"taxonomic.scope" = as.character(second_order),
"web_id" = as.character(identifier))
}
test <- gAnnotation(annotations,phylum,class,KEGG_ID)
testfun <- function(x,y,z){
as.character(substitute(x))
}
testfun(lo,lll,dkd)
testfun <- function(x){
annotations %>%
rename("taxonomic.scope" = as.character(substitute(x)))
}
testfun(class)
testfun <- function(x){
k = as.character(substitute(x))
annotations %>%
rename("taxonomic.scope" = as.character(substitute(x)))
return(k)
}
testfun(class)
testfun <- function(x){
k = as.character(substitute(x))
#annotations %>%
#rename("taxonomic.scope" = as.character(substitute(x)))
return(k)
}
testfun(class)
testfun <- function(x){
k = as.character(substitute(x))
annotations %>%
rename("taxonomic.scope" = k)
annotations
}
testfun <- function(x){
k = as.character(substitute(x))
re <- annotations %>%
rename("taxonomic.scope" = k)
re
}
testfun(class)
#' @export
gAnnotation <- function(data,first_order,second_order,identifier) {
strings <- c(as.character(substitute(first_order)),
as.character(substitute(second_order)),
as.character(substitute(identifier)))
data %>%
rename("Pathway" = strings[1],
"taxonomic.scope" = strings[2],
"web_id" = strings[3])
}
test <- gAnnotation(annotations,phylum,class,KEGG_ID)
View(test)
pathchee <- gAnnotation(annotations,phylum,class,KEGG_ID)
gDashboard(cheesedata,cluschee,pathchee,networkchee,dashboardtitle = "Test","web_id")
View(annotations)
tempf <- function(a, b = 2, ...) {
argg <- c(as.list(environment()), list(...))
print(argg)
}
tempf("apple", c = 3)
tempf <- function(a, b = 2, ...) {
argg <- environment()
print(argg)
}
tempf("apple", c = 3)
tempf <- function(a, b = 2, ...) {
argg <- c(as.list(environment()), list(...))
print(argg)
}
tempf("apple", c = 3)
gAnnotation <- function(data,first_order,second_order,identifier) {
strings <- c(first_order,second_order,identifier) |>
lapply(as.character(substitute()))
data %>%
rename("Pathway" = strings[1],
"taxonomic.scope" = strings[2],
"web_id" = strings[3])
}
pathchee <- gAnnotation(annotations,phylum,class,KEGG_ID)
gAnnotation <- function(data,first_order,second_order,identifier) {
strings <- c(first_order,second_order,identifier) |>
apply(as.character(substitute()))
data %>%
rename("Pathway" = strings[1],
"taxonomic.scope" = strings[2],
"web_id" = strings[3])
}
gAnnotation(annotations,phylum,class,KEGG_ID)
gAnnotation <- function(data,first_order,second_order,identifier) {
strings <- apply(c(first_order,second_order,identifier),as.character(substitute()))
data %>%
rename("Pathway" = strings[1],
"taxonomic.scope" = strings[2],
"web_id" = strings[3])
}
gAnnotation(annotations,phylum,class,KEGG_ID)
gAnnotation <- function(data,first_order,second_order,identifier) {
strings <- c(as.character(substitute(first_order)),
as.character(substitute(second_order)),
as.character(substitute(identifier)))
data %>%
rename("Pathway" = strings[1],
"taxonomic.scope" = strings[2],
"web_id" = strings[3])
}
gAnnotation(annotations,phylum,class,KEGG_ID)
input_string_wo_quote__ <- function(input){
as.character(substitute(input))
}
input_string_wo_quote__(maxxks)
gAnnotation <- function(data,first_order,second_order,identifier) {
strings <- apply(c(first_order,second_order,identifier),input_string_wo_quote__())
data %>%
rename("Pathway" = strings[1],
"taxonomic.scope" = strings[2],
"web_id" = strings[3])
}
gAnnotation(annotations,phylum,class,KEGG_ID)
lapply(c(cheese,pathchee),input_string_wo_quote__())
lapply(c(pp,pat),input_string_wo_quote__())
testfun <- function(x){
k = input_string_wo_quote__(x)
re <- annotations %>%
rename("taxonomic.scope" = k)
re
}
testfun(class)
testfun <- function(x){
k = input_string_wo_quote__(x)
k
}
testfun(class)
rm(gAnnotation)
gDashboard(cheesedata,cluschee,pathchee,networkchee,dashboardtitle = "Test","web_id")
View(annotations)
setwd("/Users/hazelma/Documents/GitHub")
#create("MolPad")
document("MolPad") #important: generate man
pathchee <- gAnnotation(annotations,phylum,class,KEGG_ID)
#create("MolPad")
document("MolPad") #important: generate man
#create("MolPad")
document("MolPad") #important: generate man
pathchee <- gAnnotation(annotations,phylum,class,KEGG_ID)
#create("MolPad")
document("MolPad") #important: generate man
pathchee <- gAnnotation(annotations,phylum,class,KEGG_ID)
View(pathchee)
summary(as.factor(pathchee$taxonomic.scope))
#create("MolPad")
document("MolPad") #important: generate man
gDashboard(cheesedata,cluschee,pathchee,networkchee,dashboardtitle = "Test","web_id")
library(MolPad)
library(dplyr)
gDashboard(cheesedata,
cluschee,
pathchee,
networkchee,
id_colname = c("GO_ID","KEGG_ID"),
id_type = c("GO","KEGG"))
library(MolPad)
library(dplyr)
data("cheese")
cheesedata <- cheese |>
dplyr::mutate(annotations["kingdom"]) |>
dplyr::rename_with(.cols = 12, ~"type")|>
pre_process()
pathchee <- gAnnotation(annotations,"phylum","class")
cluschee <- gClusters(cheesedata,ncluster = 10,elbow.max=15)
networkchee <- gNetwork(cluschee,ntop = 3)
gDashboard(cheesedata,
cluschee,
pathchee,
networkchee,
id_colname = c("GO_ID","KEGG_ID"),
id_type = c("GO","KEGG"))
gDashboard(cheesedata,
cluschee,
pathchee,
networkchee,
id_colname = c("GO_ID","KEGG_ID"),
id_type = c("GO","KEGG"))
View(annotations)
load("~/Documents/GitHub/MolPad/Cheese_edit_Nov27.rds")
library(MolPad)
library(dplyr)
data("cheese")
knitr::opts_chunk$set(echo = TRUE)
cheese
cheesedata
data("cheese")
cheese
annotations
ncheese <- readRDS("../Cheese_edit_Nov27.rds")
ncheese
cheese
nannotation <- readRDS("../Main_chesse_anno.rds")
nannotation
nannotation
View(nannotation)
Cheesedata <-ncheese |>
select(ID, A_1:C_5, phylum) |>
rename(type=phylum) |>
pre_process()
View(Cheesedata)
pathchee <- gAnnotation( nannotation ,"phylum", "class")
cluschee <- gClusters(cheesedata,ncluster = 10,elbow.max=15)
cluschee <- gClusters(ncheese,ncluster = 10,elbow.max=15)
rm(Cheesedata)
cheesedata <-ncheese |>
select(ID, A_1:C_5, phylum) |>
rename(type=phylum) |>
pre_process()
cluschee <- gClusters(cheesedata,ncluster = 10,elbow.max=15)
cluschee <- gClusters(cheesedata,ncluster = 10,elbow.max=15)
networkchee <- gNetwork(cluschee,ntop = 3)
gDashboard(cheesedata,
cluschee,
pathchee,
networkchee,
id_colname = c("KEGG_ID","GO_ID"),
id_type = c("KEGG","GO"))
View(nannotation)
View(ncheese)
View(ncheese)
View(nannotation)
View(nannotation)
View(cheesedata)
View(ncheese)
View(nannotation)
View(cheesedata)
View(ncheese)
View(ncheese)
cheese <- readRDS("../Cheese_edit_Nov27.rds")
annotations <- readRDS("../Main_chesse_anno.rds")
save(cheese,annotations,file = "cheese.RData")
#-----------------------update package----------------------
library(devtools)
setwd("/Users/hazelma/Documents/GitHub")
document("MolPad") #important: generate man
document("MolPad") #important: generate man
#-----------------------run example----------------------
data("cheese")
View(annotations)
View(cheese)
library(MolPad)
data("cheese")
View(cheese)
devtools::test()
setwd("/Users/hazelma/Documents/GitHub/MolPad")
devtools::test()
View(annotations)
data("cheese")
View(cheese)
cheesedata <- cheese |>
select(ID, A_1:C_5, phylum) |>
rename(type=phylum) |>
pre_process()
pathchee <- gAnnotation(annotations,"phylum","class")
head(cheesedata,3)
head(pathchee,3)
cluschee <- gClusters(cheesedata,ncluster = 10,elbow.max=15)
networkchee <- gNetwork(cluschee,ntop = 3)
gNetwork_view(networkchee)
cheesedata[10:15,]
pathchee[10:15,]
pathchee[10:20,]
pathchee[110:120,]
pathchee[110:115,]
cheesedata[110:115,]
cheesedata[112:115,]
pathchee[112:115,]
gDashboard(cheesedata,
cluschee,
pathchee,
networkchee,
id_colname = c("GO_ID","KEGG_ID"),
id_type = c("GO","KEGG"))
View(pathchee)
setwd("/Users/hazelma/Documents/GitHub")
document("MolPad") #important: generate man
library(MolPad)
gDashboard(cheesedata,
cluschee,
pathchee,
networkchee,
id_colname = c("GO_ID","KEGG_ID"),
id_type = c("GO","KEGG"))
#----
setwd("/Users/hazelma/Documents/GitHub/MolPad")
match.color__(c(paste0("N_",1:10)),c("red","blue"))
c(paste0("N_",1:10)))
c(paste0("N_",1:10))
paste0("N_",1:10)
#----
match.color__(paste0("N_",1:10),c("red","yellow","blue"))
convert_range(3:10)
convert_range(5:10)
setwd("/Users/hazelma/Documents/GitHub")
document("MolPad") #important: generate man
#----
setwd("/Users/hazelma/Documents/GitHub/MolPad")
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
convert_range(5:10)
#-----------------------update package----------------------
library(devtools)
setwd("/Users/hazelma/Documents/GitHub")
document("MolPad") #important: generate man
#----
setwd("/Users/hazelma/Documents/GitHub/MolPad")
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
